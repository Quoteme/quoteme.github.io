{
  "hash": "64b721cb7877e0315800b8a3a61b3589",
  "result": {
    "markdown": "---\ntitle: \"My first program in the AUR\"\nauthor: \"Luca Leon Happel\"\ndate: \"2020-03-28\"\ncategories: [\"programming\", \"aur\", \"archlinux\"]\n---\n\nRecently I discovered some more of the incredibly useful features of\nmy favorite text-editor [Neovim](https://github.com/neovim/neovim):\n\n---\n\nEntering `:read !somefunction` in Neovim causes the editor to execute\nthe command `somefunction` and then insert the echoed response into the\nfile you are currently editing at your cursor position.\n\n---\n\nThis got me thinking... Maybe I could use this to make my programming\nmore concise. And after installing `figlet` I was proven right:\n\n\n```{bash}\n# Use `:read figlet \"Example\"`\n#     and then select the output and comment it out: `:'<,'>norm ^i# `\n#\n#  _____                           _\n# | ____|_  ____ _ _ __ ___  _ __ | | ___\n# |  _| \\ \\/ / _` | '_ ` _ \\| '_ \\| |/ _ \\\n# | |___ >  < (_| | | | | | | |_) | |  __/\n# |_____/_/\\_\\__,_|_| |_| |_| .__/|_|\\___|\n#                           |_|\necho \"It works!\"\n```\n\n\nAnd after all this thinking I was stuck with an idea, which I had for\nquite some time already, but never really knew how to implement in vim:\n\nI can use this, to show complex math formulas in programs, as actual math formulas\n{: text-align: center}\n\nThe problem however was, that no package I searched for seemed to\nprovide the ability to render math formulas as ASCII / ANSI / Unicode.\nAnd therefor I just set out to create my own program:\n\n### [prettymath](http://github.com/quoteme/prettymath)\n\nThe programming was the easy part. Just write a python script that\ninternally parses expressions using [SymPy](https://www.sympy.org/en/index.html)\nand then pretty prints them. But publishing this program with none more\nthan ~50 lines of code was a real pain.\n\n1. Publish to GitHub\n2. Create an account on [https://aur.archlinux.org ](https://aur.archlinux.org/)\n3. Use my [.ssh/config](#ssh_config)\n4. Generate an ssh key: `$ ssh-keygen -f ~/.ssh/aur`\n5. Clone your future repository: `git clone ssh://aur@aur.archlinux.org/your_package_name.git`\n6. Put your `PKGBUILD` in there\n7. Add, Commit, Push\n\n###### SSH Configuration    {#ssh_config}\n```bash\n$ cat .ssh/config\nHost aur.archlinux.org\nUser aur\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/aur\n```\n\n---\n\nAnd after all this struggle, which even drove me to reddit because I\nhad no clue anymore on what to do, I was able to install my package using the AUR:\n\n```bash\nyay -S prettymath-git\n```\n### What does it do?\n\nAfter having installed `prettymath-git`, you can do stuff like this:\n\nbefore `prettymath`\n```python\nimport math\n\ndef normalDistribution(x):\n\treturn 1/sqrt(math.pi)*math.e**(-x**2)\n```\n\nafter `prettymath` (`:read !prettymath -u \"1/sqrt(pi) * e**(-x**2)\"; :norm ^i# `)\n```python\nimport math\n\ndef normalDistribution(x):\n\t#    2\n\t#  -x\n\t# e\n\t# ────\n\t#  √π\n\treturn 1/sqrt(math.pi)*math.e**(-x**2)\n```\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}