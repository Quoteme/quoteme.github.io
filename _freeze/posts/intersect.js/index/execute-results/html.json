{
  "hash": "06347e7da875f34e46e03bbf47452680",
  "result": {
    "markdown": "---\ntitle: \"intersect.mjs und der Sphären/Boxen-Schnitt\"\nauthor: \"Luca Leon Happel\"\ndate: \"2020-02-14\"\ncategories: [\"javascript\", \"programming\", \"webgl\", \"math\"]\n---\n\n### Problem\n\nMomentan arbeite ich an meiner [intersect.mjs](https://github.com/Quoteme/intersect)\nBibliothek, welche dafür da ist Kollisionen und Schnitte von verschiedenen\ngeometrischen Strukturen in $n$ dimensionen zu erkennen.\nDabei ist gerade diese folgende Zeile zu einer Herausvorderung geworden:\n\n\n```{javascript}\n// plane2circle :: Real a => [(a,a)] -> a -> [a] -> ([a] -> Real) -> Boolean\nconst plane2circle = (p,r,c,d=Math.hypot) =>\n\t//TODO\n```\n\n\n| Abkürzung | Name | Eigenschaft | Beschreibung |\n|:---------:| ---- | ----------- | ------------ |\n| `p` | Hyperwürfel\t\t\t| `[(a,a)]`\t| Zwei Punkte im $\\mathbb{R}^n$ |\n| `r` | Radius\t\t\t\t| `a`\t\t\t| Radius der Sphäre |\n| `c` | Position der Sphäre\t| `[a]`\t\t| Position des Zentrums der Sphäre |\n| `d` | Maß\t\t\t\t\t| `[a] -> a`\t| Ein verwendetes [Maß](https://de.wikipedia.org/wiki/Ma%C3%9F_(Mathematik)#Definition) aus der Maßtheorie|\n\nhierbei verwende ich [Haskell](haskell.org) Schreibkonventionen für die\nEigenschaften. Also, `a` bedeuted, ein beliebiger Datentyp oder\n`[a,a]` deuted auf zwei beliebige Daten (die nicht gleich sein müssen,\ndes selben Types hin. Da ich `Real a =>...` am Anfang geschrieben habe,\nbedeuted dass: `[(a,a)]` ist eine Liste von Tupeln verschiedener reeller\nZahlen: $((a_{0_0},a_{0_1}),(a_{1_0},a_{1_1}),\\dots), \\quad a_{i_j} \\in \\mathbb{R}$\n\n### Lösung\n\nDamit ich diese Funktion dazu bringen konnte, zu funktionieren ist mir\neine Lösung gekommen. Gegeben hatte ich bereits eine Funktion, welche\nprüft ob eine Hypersphäre und ein Punkt sich schneiden. Daher habe ich\neine weitere Funktion geschrieben, welche prüft, ob sich ein Kreis und\nein Intervall schneiden:\n\n\n```{javascript}\n// point2circle :: Num a => [a] -> Real -> [a] -> ([a] -> Real) -> Boolean\nexport const point2circle = (p,r,q=p.map(_=>0),d=Math.hypot) =>\n\td(...p.map((x,i) => x-q[i])) <= r;\n\n// interval2circle :: Num a => a -> Real -> [a,a] -> Boolean\nexport const interval2circle = (c,r,i,d=Math.hypot) =>\n\tpoint2circle([c], r+Math.abs(i[0]-i[1])/2, [(i[0]+i[1])/2], d)\n```\n\n\nNun ist es ein Leiches, zu prüfen ob ein Hyperwürfel und eine Hypersphäre\nsich schneiden;\nMan muss prüfen ob die Projektionen der Sphäre und des Hyperwürfels sich\nauf jeder Achse schneiden.\n\n<blockquote class=\"imgur-embed-pub\" lang=\"en\" data-id=\"a/rZpCzkF\" data-context=\"false\" >\n<a href=\"//imgur.com/a/rZpCzkF\"></a>\n</blockquote>\n<script async src=\"//s.imgur.com/min/embed.js\" charset=\"utf-8\"></script>\n\n\n```{javascript}\n// plane2circle :: Num a => [(a,a)] -> Real -> [a] -> ([a] -> Real) -> Boolean\nexport const plane2circle = (p,r,c,d=Math.hypot) => p\n\t.map((i,j) => interval2circle(c[j],r,i,d) )\n\t.every(e => e==true)\n```\n\n\nund diese Funktion können wir nun testen:\n\n\n```{javascript}\nimport * as int from './intersect.mjs'\n\nlet p = [[0,1],[0,1],[0,1]]\nlet r = 1\nlet c = [0,0,0]\nconsole.log(int.plane2circle(p,r,c)) // true ✅\n\nlet p = [[0,1],[0,1],[0,1]]\nlet r = 1\nlet c = [0,0,2]\nconsole.log(int.plane2circle(p,r,c)) // false ✅\n\nlet p = [[0,1],[0,1]]\nlet r = 1\nlet c = [2,2]\nconsole.log(int.plane2circle(p,r,c)) // false ✅\n```\n\n\nbesonders das letzte Ergebnis kann man leicht überprüfen:\n\n![geometrischer Beweis](https://i.imgur.com/aqI995m.png)\n\n### Fazit\n\nDas Problem _Schnitte zwischen höherdimensinalen Sphären und Würfeln_\nzu lösen war nicht all zu einfach auf den ersten Blick; doch verwendet\nman (wortwörtlich) verschiedene Perspektiven und ist bereit bereits\nbekannte Resultate (wie `point2circle`) zu verwenden und neue zu\nfinden (wie `interval2circle`), so ist es doch ein Leichtes gewesen\neine allgemeine Lösung zu finden.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}