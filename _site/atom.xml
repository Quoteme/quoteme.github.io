<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Luca Leon Happel</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2021-10-30T14:26:48+00:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Luca Leon Happel</name>
 </author>
 
 
   
   <entry>
     <title>sheaves in Minecraft</title>
     <link href="http://localhost:4000/posts/sheaves_in_minecraft"/>
     <updated>2021-10-29T10:12:35+00:00</updated>
     <id>http://localhost:4000/posts/sheaves_in_minecraft</id>
     <content type="html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;A few days ago after my introductory class in topology and right before
my class about algebraic geometry, me and my friend Anastasia were asked
by our fellow students from topology about our current topics in
algebraic geometry. This then lead to the discussion
about &lt;a href=&quot;https://en.wikipedia.org/wiki/Sheaf_(mathematics)&quot;&gt;sheaves&lt;/a&gt;, as
they saw my sketch of them in my lecture notes (because I mentioned that
I typically only draw geometric sketches of ideas and proofs instead of
writing actual sentences like most people).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/IvIs8F3.png&quot; alt=&quot;We talked about this diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After some explaining they seemed to understand the concept somewhat,
but I was unable to really give them a deeper understanding. I assume
this was caused by my inability to relate the importance of this
structure to them in a practical way. So after some days, I started to
imagine fictional conversations in my spare time where I would try to
explain this topic to them again. I especially tried to focus on
giving real world examples of sheaves, which are not exactly linked to
algebraic geometry, but instead convey the idea of tracking data which
is connected to open sets. And as I thought about this, I started to
imagine video games, which typically provide very natural applications
of impressively deep mathematical structures, leading me to relate the
game &lt;a href=&quot;https://en.wikipedia.org/wiki/Minecraft&quot;&gt;Minecraft&lt;/a&gt;
to algebraic geometry, or sheaves more exactly.&lt;/p&gt;

&lt;h2 id=&quot;minecraft-as-a-game&quot;&gt;Minecraft as a game&lt;/h2&gt;

&lt;p&gt;Minecraft is the most popular game in existence currently. Therefor it
is very likely that you, the reader, have heard about it at some point
in your life. But here is a quick recap of what Minecraft is and how
it works (abstractly).&lt;/p&gt;

&lt;h3 id=&quot;what-is-minecraft&quot;&gt;What is minecraft?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/gJAxAuO.png&quot; alt=&quot;Example view of minecraft&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In Minecraft you start a game as digital character in a blocky world.
There you start to collect resources by mining different materials (in
the form of breaking blocks mainly) or slaying enemies which roam your
digital world.&lt;/p&gt;

&lt;h3 id=&quot;how-does-it-technically-work&quot;&gt;How does it technically work?&lt;/h3&gt;

&lt;p&gt;Now the interesting part for us at least would be, how the game stores
this world and its inhabitants. We know that the blocks are arranged in
a lattice pattern which happens to be \(\mathbb{Z}^3\) and because each
block can be identified by its type (&lt;em&gt;air&lt;/em&gt;, &lt;em&gt;grass&lt;/em&gt;, &lt;em&gt;dirt&lt;/em&gt;, &lt;em&gt;wood&lt;/em&gt;, …)
and there are just a finite number of unique blocks, we can store
the blocky part of a Minecraft world as a subset
\(M\subset \mathbb{Z}^3\times\mathbb{N}\) by using a bijective mapping
from the types of blocks to \(\mathbb{N}=\{0,1,2,\dots\}\).&lt;/p&gt;

&lt;p&gt;Now how can Minecraft be able to process infinitely many blocks and
render them to a screen? The answer is that this would be impossible,
because traversing every block in an infinite Minecraft world (which
most Minecraft worlds basically are) would take a very long time, let
alone rendering them. This would be impossible to render at a stable
30FPS and therefor the developers at Mojang decided to split the
Minecraft world into chunks of \(16\times 16\times 256\) (here we can
neglect the last coordinate of our tuples in \(M\), because the number
of different blocks is small small enough that a computer can traverse
them easily).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/6sKQkg8.jpg&quot; alt=&quot;Examples of chunks - chunkbounds shader&quot; /&gt;
&lt;img src=&quot;https://i.imgur.com/I3ZECeE.png&quot; alt=&quot;Examples of chunks - chunk edge indicator&quot; /&gt;&lt;/p&gt;

&lt;p&gt;These subsets of the world \(C_{x,y,z}\subset M\subset \mathbb{Z}^3\times\mathbb{N}\)
are called chunk and each exist for each \(x,y \in 16\mathbb{Z}, \&amp;gt; z\in 256\mathbb{Z}\)
(technically the \(z\) is fixed to \(0\) because Minecraft has a finite
height of \(256\) blocks, but we will abstract/future proof a bit for now).&lt;/p&gt;

&lt;!--
TODO: Link basis of topology
--&gt;

&lt;p&gt;So why are these chunks important for us? How do they relate to sheaves?
Well, these \(C_{x,y,z}\) form a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Base_(topology)&quot;&gt;basis of a topology&lt;/a&gt;
on \(M\) if we name the “chunks” not “chunks”
but “open sets” instead! This is quite
natural because Minecraft creates a union of these chunks (the number
of which is free for the user to decide, therefor possibly infinite)
and then renders this union of chunks to the screen. This union of chunks
would not be considered a chunk in Minecrafts’ code, but we will refer to
the union of chunks as “open set” nonetheless, because this gives us our
topological structure on \(M\). (Bonus: to really proof that the
\(C_{x,y,z}\) form a topological basis, one must show that the finite
intersection of open sets must also be an open set. The proof is quite
trivial but left as an exercise to the reader.)&lt;/p&gt;

&lt;h3 id=&quot;so-we-have-a-topological-space-on-our-minecraft-world-m-what-now&quot;&gt;So we have a topological space on our Minecraft world \(M\), what now?&lt;/h3&gt;

&lt;p&gt;After having done all of this for the sake of rendering parts of our
world on a computer in a finite time, we get some fundamentally needed
game mechanics (which are not obviously related to the rendering pipeline)
for free!&lt;/p&gt;

&lt;p&gt;Like for example when the player wants to go to sleep in the game.
Minecraft first checks if the player does not have any hostile entities
in the current chunk. Therefor the game must calculate the set of
all entities in currently in the game world, which are also in the
currently inhabited chunk.&lt;/p&gt;

&lt;p&gt;For this, Minecraft stores all entities as tuples \(e\in\mathbb{R}^3\times\mathbb{N}\),
where \(\mathbb{N}\) again denotes the type of enemy. But now, minecraft
also has a functor \(\mathcal{F}: (\frac{\text{open}}{M})\to \mathcal{E}\), where
\(\mathcal{E}\) is the category of entities, which has as objects just
sets of entities and as morphisms the surjective maps
\(\phi: V \twoheadrightarrow V'\subset V\) for \(V, V'\in \mathcal{E}\)
and \(\frac{\text{open}}{M}\) denotes the category of open sets over \(M\)
created by set inclusion as well.&lt;/p&gt;

&lt;p&gt;In tradition to the notation used by my professor Schröer, I will
denote the application of this functor as \(\Gamma(U, \mathcal{F})=V\).&lt;/p&gt;

&lt;h3 id=&quot;a-quick-recap-in-simple-terms&quot;&gt;A quick recap in simple terms&lt;/h3&gt;

&lt;p&gt;What we did now, was define a mapping from the open sets in our Minecraft
world to the sets of entities. This just allows us to ask the
following question using the mathematical/computer language:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Which entities (like zombies, skeleton, player, …) are inside
the collection of the following chunks:
\(C_{x_1, y_1, z_1}, C_{x_2, y_2, z_2}, \dots\) ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the formulation in mathematical lingo would be:&lt;/p&gt;

\[\begin{equation}
\Gamma(\bigcup_{i\in I} C_{x_i, y_i, z_i}, \mathcal{F})=V
\end{equation}\]

&lt;p&gt;where \(V\) is the set of entities we are looking for. We can say as a
rule, that for our purposes \(\mathcal{F}\) must suffice the following
condition:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For each open set \(U\) of \(M\), we have the set \(\Gamma(U, \mathcal{F})\).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;but-who-needs-the-structure-of-a-sheaf-for-that-doesnt-a-function-suffice&quot;&gt;But who needs the structure of a sheaf for that? Doesn’t a function suffice?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/4RXyf44.jpg&quot; alt=&quot;Well yes, but actually no&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The problem with just mapping open sets of our
Minecraft world to sets of entities raises the problem of
&lt;em&gt;restricting our open set&lt;/em&gt; but &lt;em&gt;increasing our number of entities therein&lt;/em&gt;.
Imagine the following. You have your Minecraft map and play the game inside.
Now you wish to poll the number of entities which are located in your
current chunk (the one your player resides in) and the ones adjacent to
this one. This would give you in total $9$ chunks in which you poll
for entities, because you wish to sleep in the game and the game does 
not let you sleep, if there are any monster (subset of entities) near
your bed. So the game says everything is fine, your player is the only
entity in these chunks and you can go to bed. But when you wake up
in Minecraft to your dismay you are getting attacked by a zombie, because
actually there was one more entity nearby. This problem/bug occurred,
because the mapping which shows entities residing in a open set of our
topology did not respect &lt;em&gt;restriction mappings&lt;/em&gt;. This means, even if
one takes the subset of an open set, the correlating entities in this
subset need not be a subset of the entities correlating to the supset.&lt;/p&gt;

&lt;p&gt;We can solve this issue by requesting our function \(\mathcal{F}\) must
fulfill the following criteria:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For each inclusion \(V'\subset V\) there must be a function
\(\text{res}^{V}_{V'}:\Gamma(V,\mathcal{F})\to\Gamma(V',\mathcal{F})\) &lt;!--__--&gt;&lt;/li&gt;
  &lt;li&gt;\(\text{res}^{V'}_{V''} \circ \text{res}^{V}_{V'} = \text{res}^{V}_{V''}\) &lt;!--__ --&gt;&lt;/li&gt;
  &lt;li&gt;\(\text{res}^{V}_{V} = id\) &lt;!--__--&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This so far just means, that given some \(\Gamma(V,\mathcal{F})\) which
is the set of entities inside some open set, we can look at smaller
open sets’ entities if these open sets are included in the prior open set.&lt;/p&gt;

&lt;h3 id=&quot;the-last-problem-to-solve&quot;&gt;The last problem to solve&lt;/h3&gt;

&lt;p&gt;So now we have done all of this to formalize our notion of entities
inside some set of chunks. But there is still some problem in the example
we wrote one paragraph before. We still have not solved the problem
that given our knowledge of \(\Gamma(V,\mathcal{F})\) where \(U\) is some
open set (with the player inside) we want to infer that open subsets
\(V'\subset V\) cannot have more entities or ones, that cannot be found
inside \(V\).&lt;/p&gt;

&lt;p&gt;The problem which we are facing is that we are missing the &lt;strong&gt;sheaf axiom&lt;/strong&gt;,
which completes our requirements from before:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For each open set \(U\) of \(M\), we have the set \(\Gamma(U, \mathcal{F})\).&lt;/li&gt;
  &lt;li&gt;For each inclusion \(V'\subset V\) there must be a function
\(\text{res}^{V}_{V'}:\Gamma(V,\mathcal{F})\to\Gamma(V',\mathcal{F})\) &lt;!--__--&gt;&lt;/li&gt;
  &lt;li&gt;\(\text{res}^{V'}_{V''} \circ \text{res}^{V}_{V'} = \text{res}^{V}_{V''}\) &lt;!--__ --&gt;&lt;/li&gt;
  &lt;li&gt;\(\text{res}^{V}_{V} = id\) &lt;!--__--&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;which define a sheaf. The sheaf axiom now states the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(&lt;em&gt;Locality&lt;/em&gt;) If \(\mathcal{U}=\bigcup_{i\in I} U_i\) is an open
covering of an open set \(U\) and if \(s,t\in\Gamma(U,\mathcal{F})\)
with \(\text{res}^U_{U_i}(s)=\text{res}^U_{U_i}(t)\), then \(s=t\)&lt;/li&gt;
  &lt;li&gt;(&lt;em&gt;Gluing&lt;/em&gt;) If \(\mathcal{U}=\bigcup_{i\in I} U_i\) is an open covering
of an open set \(U\) and \(s_i\in U_i\)$ for \(i\in I\) holds
\(\text{res}^{U_i}_{U_i\cup U_j}(s_i) = \text{res}^{U_j}_{U_i\cup U_j}(s_j)\)
then there must be exactly one \(s\in\Gamma(U,\mathcal{F})\) with
\(\text{res}^U_{U_i}(s) = s_j\)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And these basically state, that if there is some entity \(e'\) in
\(V'\subset V\), ergo \(e'\in\Gamma(V', \mathcal{F})\), then there
must also be exactly one \(e\in\Gamma(V,\mathcal{F})\) which
is then equal to \(e'\) is we restrict our focus back to \(V'\).&lt;/p&gt;

&lt;p&gt;In our situation with the zombie before, we had looked at an open set
\(V\) which was defined as the chunk with the player \(p\) inside glued together
with the chunks adjacent to that one. We said \(\Gamma(V,\mathcal{F})\)
only included the player, because this was the only entity which was
mapped from \(V\) by \(\mathcal{F}\), but then we said there
was actually one zombie \(z'\) (another entity) inside \(V'\), which
we defined as the chunk the player was inside.&lt;/p&gt;

&lt;p&gt;This clearly violates our sheaf axiom! Because by the &lt;em&gt;gluing&lt;/em&gt; property,
we must have \(z\in\Gamma(V,\mathcal{F})\) as it follows from
\(z'\in\Gamma(V',\mathcal{F})\) that there needs to be this \(z\) with
\(\text{res}^V_{V'}(z)=z'\). So we know that because there is an open set
with a zombie \(z'\) inside, an entity \(z\) that looks like this zombie if
we restrict our focus to the open set where we found \(z'\) must also
exist in any open set \(V\) that includes \(V'\).&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This concept might look daunting at first and maybe even useless
because of its’ apparent abstractness. But in fact we are very far away
from some abstract useless construct as I tried to visualize in this
blog post. In fact the construct of a sheaf is quite natural as it
canonically allows us to track data attached to open sets (or as is the
case in Minecraft: track entities in unions of chunks).&lt;/p&gt;

&lt;p&gt;This concept can be much further observed though, providing a rich
theory not just applicable in algebraic geometry. In fact, I will try to
publish another post soon where I analyze some art I found
particularity interesting using the structures defined in this post while
also extending the notions of a sheaf to the ideas of stalks (which in
our Minecraft example would allocate the entities in the smallest open
set around some some point to said point; Or more concretely all the
entities in a chunk are returned, if we enter some point inside said
chunk) and possibly also the idea of germs.&lt;/p&gt;

&lt;p&gt;Until then I wish all of you good luck and fun applying abstract math
with seemingly no application 😉.&lt;/p&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>Math meme solve finished</title>
     <link href="http://localhost:4000/posts/math_meme_proof_finished"/>
     <updated>2021-10-21T23:58:35+00:00</updated>
     <id>http://localhost:4000/posts/math_meme_proof_finished</id>
     <content type="html">&lt;h2 id=&quot;the-exercise&quot;&gt;The exercise&lt;/h2&gt;

&lt;p&gt;Around one year ago I tried to solve
&lt;a href=&quot;/posts/math_meme_proof&quot;&gt;the following riddle&lt;/a&gt; involving
abstract algebra, but I failed and did not finish the question at that&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/5gUWnRL.png&quot; alt=&quot;Prove that Rx/(x^2+bx+c) is isomorphic to R^2 or C&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-proof&quot;&gt;The proof&lt;/h2&gt;

&lt;p&gt;Let \(f=x^2+bx+c\in\mathbb{R}[x]\). 
\(f\) can either have one double root, iff the discriminant
\(\Delta f=b^2-4c\) is
zero, or it can have two real roots iff \(\Delta f&amp;gt;0\), or it can have
two complex roots iff \(\Delta f&amp;lt;0\).&lt;/p&gt;

&lt;h3 id=&quot;negative-discriminant&quot;&gt;Negative discriminant&lt;/h3&gt;

&lt;p&gt;If \(\Delta f&amp;gt;0\) we have \(f(x)\in\mathbb{R}\) with \(x\not\in\mathbb{R}\).
We can rewrite \(f(x)=x^2+bx+c=0\) to be \(x^2+bx=-c\), and therefor
\(x^2+bx\in\mathbb{R}\).
Also, because \(\Delta f&amp;gt;0\), we know that that we can split \(f(x)\)
into its linear factors \(f(x)=(x-w)(x-v)\) with \(w,v\in\mathbb{R}\).
This means that our number \(x\) will be equal to \(0\) if we subtract
a real number from it, meaning it must be real, thereofr concluding
that \(\mathbb{R}/(x^2+bx+c)\cong \mathbb{R}\times \mathbb{R}\)&lt;/p&gt;

&lt;h3 id=&quot;positive-discriminant&quot;&gt;Positive discriminant&lt;/h3&gt;

&lt;p&gt;In case our discriminant \(\Delta f\) is positive we know that
\(f(x)\) cannot be split into real linear monomial factors, which
means that \(x\) cannot be a real number.
Also, because \(f\) only has purely complex roots, \(x\) must be a
purely complex number as well.
Because \(\mathbb{R}[x]/(f)\) is a vectorspace over \(\mathbb{R}\)
we know that \(\alpha x+\beta=i\) for \(\alpha, \beta\in \mathbb{R}\),
concluding that \(\mathbb{R}[x]/(x^2+bx+c) \cong \mathbb{R}[i]=\mathbb{C}\)&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Reading Bosch Algebra really helped me grasp some of the concepts like
field extensions some more. I assume that this knowledge also took
some time to ripen inside my brain, but after some time algebra
finally makes more sense to me. Also I finished my exam about abstract
algebra a few months ago! (While also studying for commutative algebra
and already having finished my introductory course in algebraic geometry).&lt;/p&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>Pacratch Update bisher</title>
     <link href="http://localhost:4000/posts/pacratch_update_bisher"/>
     <updated>2021-04-06T21:06:00+00:00</updated>
     <id>http://localhost:4000/posts/pacratch_update_bisher</id>
     <content type="html">&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;a/a9oSq6x&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/a/a9oSq6x&quot;&gt;Pacrach update 2020/04/06&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;p&gt;Ich arbeite jetzt seit fünf Tagen (plus/minus ein Tag oder so) an einem
neuen Spiel, welches ich “Pacratch” nenne, nach dem Kartenspiel,
welches ich in meiner Grundschule mal entworfen habe. Mehr dazu kann
man auf &lt;a href=&quot;https://github.com/Quoteme/pacratch&quot;&gt;https://github.com/Quoteme/pacratch&lt;/a&gt;
nachlesen 👍🏻.&lt;/p&gt;

  &lt;p&gt;Hier ist ein kleiner Statusreport von dem, wie weit ich momentan bin.
Zuerst würde ich aber gerne Robert Smykala und Dominik Du für Ihre
Hilfe beim Zeichnen der entsprechenden neuen Figuren Zitronenmann
und Oni Warrior danken 🙏🏻.&lt;/p&gt;

  &lt;h2 id=&quot;kartenupdate&quot;&gt;Kartenupdate&lt;/h2&gt;

  &lt;p&gt;Updates zum Spielsystem sind, dass Karten nun folgende Daten angeben:&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/eNGu2rf.png&quot; alt=&quot;momentanes Kartenlayout und abgespeicherte Daten&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;Mehr zu dem Thema, welche Daten in einer Karte abgespeichert werden,
wie man selber Karten entwerfen kann und wie man eine Preview einer
Karte bekommen kann, kann man im &lt;a href=&quot;https://github.com/Quoteme/pacratch/wiki/How-to-create-a-new-Pacratch&quot;&gt;Pacrach Wiki&lt;/a&gt;
nachlesen.&lt;/p&gt;

  &lt;h2 id=&quot;spielsystem&quot;&gt;Spielsystem&lt;/h2&gt;

  &lt;p&gt;Das Spielsystem, beziehungsweise die Spiellogik wurde auch gestern
Nacht etwas mehr von mir überdacht. Wie es jetzt aussieht, ist dass
jeder Spieler ein Kartendeck hat, welches (sagen wir) 60 Karten je hat.
Der Spieler zieht nun in jedem Zug eine gewisse Anzahl von Karten und
darf diese, je nachdem wie schnell die Karte ist, um sein Deck legen.
Es gibt Karten, welche Krieger sind, oder welche Stützpunkte sind, oder
Ausrüstung, oder Infrastruktur, oder …, jedoch kommen diese alle
vom Deck des Spielers.&lt;/p&gt;

  &lt;p&gt;Ziel ist es, das Deck der anderen Spieler mit seinen Kriegern zu
übernehmen. Dabei muss man bedenken, dass Krieger nicht all zu weit weg
vom Kartendeck, beziehungsweise der Infrastruktur des Spielers gehen
sollten, da sie dann keine Energie mehr erhalten (und Schaden durch
Verschleiß erleiden).&lt;/p&gt;

  &lt;p&gt;Man muss also abwägen, wie man am besten sein eigenes Imperium ausbaut
und durch Monster, Krieger und gut geplante Infrastruktur zum Sieg
gelangt.&lt;/p&gt;

  &lt;p&gt;Hier ist noch ein Bild von dem momentanen Spielideeenplan:&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/91asZx9.png&quot; alt=&quot;Spielideeenplan&quot; /&gt;&lt;/p&gt;

  &lt;hr /&gt;

  &lt;p&gt;Zu guter Letzt ist hier noch eine Work-In-Progress preview für eine
neue Art von Karte: Eine Infrastrukturkarte, welche es erlaubt Kriegern
weiter vom Deck weg zu gehen und trotzdem Energie zu bekommen.
Somit gibt sie Schutz und weil sie ein fliegendes Schloss ist, ist sie
sogar etwas mobil, obwohl das mehr Energie zum Erhalt dieser Karte
bedeutet.&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/1Kew2c0.png&quot; alt=&quot;Preview der neuen Karte&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>Torusmeme</title>
     <link href="http://localhost:4000/posts/torusmeme"/>
     <updated>2021-03-24T23:55:00+00:00</updated>
     <id>http://localhost:4000/posts/torusmeme</id>
     <content type="html">&lt;p&gt;A funny meme I made about toruses:&lt;/p&gt;

&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;a/WXBTYWm&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/a/WXBTYWm&quot;&gt;The torus alignment chart&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;p&gt;You better laugh now.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>Math meme solve - When is R[x]/(x^2+bx+c) isomorphic to R^2 or C</title>
     <link href="http://localhost:4000/posts/math_meme_proof"/>
     <updated>2020-12-03T13:58:00+00:00</updated>
     <id>http://localhost:4000/posts/math_meme_proof</id>
     <content type="html">&lt;p&gt;A few minute ago I stumbled upon this meme on some math and science
forum:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/5gUWnRL.png&quot; alt=&quot;Prove that Rx/(x^2+bx+c) is isomorphic to R^2 or C&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is my thought process:&lt;/p&gt;

&lt;p&gt;\(b^2-4c\) is just the &lt;a href=&quot;https://en.wikipedia.org/wiki/Discriminant&quot;&gt;discriminant&lt;/a&gt;
of the polynomial \(f(x) = x^2+bx+c\), and I will refer to it from now
on as \(\Delta(f)\).&lt;/p&gt;

&lt;p&gt;We know that if \(\Delta(f)&amp;gt;0\) then the formula
\(\frac{-b\pm\sqrt{b^2-4c}}{2} = -\frac{b}{2} \pm \sqrt{\left(\frac{b}{2}\right)^2 - c}\)
gives us the zeros \(x_1, x_2 \in \mathbb{R}\) of \(f\). Let’s look
at \(\mathbb{R}[x] / (f)\). And identify each part now.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Principal_ideal&quot;&gt;principal ideal&lt;/a&gt;
\((f) \overbrace{=}^{\mathbb{R}[x] \text{ commutative}} \{ p(x)\cdot \underbrace{f(x)}_{x^2+bx+c \\ = (x-x_1)(x-x_2) } \mid p(x) \in \mathbb{R}[x]\}\)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Quotient_ring&quot;&gt;quotient ring&lt;/a&gt;
\(\mathbb{R} [x]/(f)\), which is the same as \(\mathbb{R}[x]/\sim\) where
\(\sim\) is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;equivalence relation&lt;/a&gt;:
\(a\sim b \Leftrightarrow a-b \in (f)\)&lt;/p&gt;

    &lt;p&gt;When performing polynomial division \(\frac{p(x)}{f(x)}, \&amp;gt; p(x)\in\mathbb{R}[x]\)
if \(\deg(p(x))&amp;gt;2\) we can always perform at least one step and
the remainder must be of the form \(ax+b \in \mathbb{R}[x]/(f)\)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>Voxels, Rings and Modules - My observations on how games like minecraft relate to abstract algebra</title>
     <link href="http://localhost:4000/posts/voxels_rings_and_modules"/>
     <updated>2020-11-26T20:25:00+00:00</updated>
     <id>http://localhost:4000/posts/voxels_rings_and_modules</id>
     <content type="html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Last semester I studied &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_algebra&quot;&gt;abstract algebra&lt;/a&gt;
in my fourth year of university. It way pretty tough and sadly I did
not understand all the topics which is probably why I failed it in my
first two attempts.&lt;/p&gt;

&lt;p&gt;Now I wish to change this and succeed in my next attempt.
And what better way is there to learn for it, than by writing a video
game? 😂&lt;/p&gt;

&lt;p&gt;I got to work on my game &lt;a href=&quot;https://github.com/Quoteme/story&quot;&gt;“Story”&lt;/a&gt;
and expanded on it’s worldbuilding. This made me want to actually code
this world into my game, which then lead me to revisit my voxel-mesher.
A voxel mesher is a program which takes in a set of 3-tuples
\((x,y,z) \in \mathbb{Z}^3\) and creates a mesh out of it. Kinda like
this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/b/bc/Voxels.svg&quot; alt=&quot;Example of a Voxel Mesh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you extend this definition and use 4-tuples \((x,y,z,type)\in\mathbb{Z}^4\)
you can even create meshes consisting of different materials with
different textures and so on:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/aaf2980eb37da3e0ed4b1f5c351642c788cd90316b018259a0f17f248fb2fca1/68747470733a2f2f692e696d6775722e636f6d2f496d65416c75332e676966&quot; alt=&quot;Example of different types from my game story&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;rings-and-modules&quot;&gt;Rings and Modules&lt;/h3&gt;

&lt;p&gt;So, what does this have to do with
&lt;a href=&quot;https://en.wikipedia.org/wiki/Ring_(mathematics)&quot;&gt;rings&lt;/a&gt; and
&lt;a href=&quot;https://en.wikipedia.org/wiki/Module_(mathematics)&quot;&gt;modules&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Well, first of a &lt;em&gt;Ring&lt;/em&gt; like the integers \(\mathbb{Z}=\{\dots,-2,-1,0,1,2,\dots\}\)
together with an &lt;a href=&quot;https://en.wikipedia.org/wiki/Abelian_group&quot;&gt;abelian group&lt;/a&gt;
called addition \(+\), a &lt;a href=&quot;https://en.wikipedia.org/wiki/Monoid&quot;&gt;monoid&lt;/a&gt;
called multiplication \(\cdot\) and a \(1\)-Element is simply speaking
just a set of numbers on which one can multiply, add and subtract
every number from the other (but not necessarily divide).&lt;/p&gt;

&lt;p&gt;\((\mathbb{Z}, +, \cdot)\) forms a Ring, because we can add every element
with another and the result will be in \(\mathbb{Z}\). We can also
multiply elements with each other, but when we divide for example \(1\)
by \(2\), the result one half is not an integer \(\frac{1}{2} \notin \mathbb{Z}\).&lt;/p&gt;

&lt;p&gt;We can see this structure in our voxels, because they are indexed
using integers (i.e. there is no voxel between the first and second one).&lt;/p&gt;

&lt;p&gt;Now on to the &lt;em&gt;Modules&lt;/em&gt;. This is simply speaking just a Group under
Addition together with the attribute that we can multiply each element
with an element of our Ring. This group is basically just provides us
with vector addition and the ring extends this to scalar multiplication.&lt;/p&gt;

&lt;h3 id=&quot;how-is-this-related-to-our-voxels-then&quot;&gt;How is this related to our voxels then?&lt;/h3&gt;

&lt;p&gt;Well, our Voxelspace (the set of all 3-tuples \((x,y,z)\in\mathbb{Z}^3\))
is just a &lt;em&gt;module&lt;/em&gt;! On first glance it might look like a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_space&quot;&gt;vector space&lt;/a&gt;, but because
our voxels are arranged on a grid / indexed by integers and because they
cannot leave this grid but we can move them around by whole numbers,
they are in fact an addative group! (This means, we can move one voxel
one voxel down, or 3 voxels right).
Also, we can multiply the voxels with integers. This would correlate
with multiplying the tuple component wise with our factor.&lt;/p&gt;

&lt;h3 id=&quot;cool-but-how-is-this-useful&quot;&gt;Cool, but how is this useful?&lt;/h3&gt;

&lt;p&gt;We can find a &lt;a href=&quot;https://en.wikipedia.org/wiki/Generating_set_of_a_module&quot;&gt;generating set&lt;/a&gt;
for this module which consists of three elements. These elements are
the ones which lie in each cardinal direction
\(\{(1,0,0),(0,1,0),(0,0,1)\}\). If we take \((1,0,0)\)
and look at the submodules it creates, then it will be similar to the
red line in this image:&lt;/p&gt;

&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;5P7as95&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;https://imgur.com/5P7as95&quot;&gt;View post on imgur.com&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;p&gt;The blue line analogously represents the submodule generated by \((0,0,1)\).
And from here on, we can observe that the number of elements of this
generating set is 3. Therefor we can also conclude that this module
is &lt;a href=&quot;https://en.wikipedia.org/wiki/Finitely_generated_module&quot;&gt;finitely generated&lt;/a&gt;
and kinda looks like a three dimensional vectorspace.&lt;/p&gt;

  &lt;h5 id=&quot;note&quot;&gt;Note&lt;/h5&gt;

  &lt;p&gt;At first I wanted to determine the length of the module and from there
conclude that because this length is three, say that this relates to
its three-dimensional representation. But this is false, because this
module actually has infinite length, because we can for example
pick \(\langle(1,0,0)\rangle\) the submodule generated by \((1,0,0)\)
and then pick a prime number \(p\) and look at the submodule generated by
\(\langle(p^n,0,0)\rangle, \&amp;gt; n\in\mathbb{N}\). This will lead a proper
submodule for each \(n\), kinda like in this image, where the
y-Axis represents the \(n\)!&lt;/p&gt;

  &lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;umB2aNP&quot;&gt;
    &lt;p&gt;&lt;a href=&quot;https://imgur.com/umB2aNP&quot;&gt;View post on imgur.com&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

    &lt;p&gt;More on that in the &lt;a href=&quot;https://www.reddit.com/r/math/comments/k30zol/voxels_rings_and_modules_my_observations_on_how/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&quot;&gt;reddit thread&lt;/a&gt;.&lt;/p&gt;

    &lt;!--

Basically this gives intuition into what the length of a module is.
The [length of a module](https://en.wikipedia.org/wiki/Length_of_a_module)
is just the longest chain of submodules a module has, where a submodule
is a proper subset of our module which is invariant under multiplication.

In terms of voxels this means:

&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;5P7as95&quot;&gt;&lt;a href=&quot;https://imgur.com/5P7as95&quot;&gt;View post on imgur.com&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

The blue arrow is a submodule, as is the red module. In fact, the entire
floor is a submodule (the floor includes the red arrow as a submodule,
and the floor also includes the blue arrow as a submodule). And all these
submodules are submodules of my entire level which is a subset of a
&quot;voxelspace&quot;.

Now the length of a submodule also makes sense intuitively! If we consider
the entire level as a module, then we could pick the floor as a submodule
and then we could pick the red arrow as a submodule of the floor submodule,
and finally pick the empty-set as a submodule. But now we are stuck and
have no more submodules of this _submodule_ of the red arrow _submodule_ of the
floor _submodule_. (Actually, this is the longest chain of proper
submodules one could take here). How many submodules are we deep now?
The answer is _3_! Therefor this module is of length three, which
correlates to a vectorspace of dimension _3_!

--&gt;

    &lt;h3 id=&quot;final-words-of-wisdom&quot;&gt;Final words of wisdom&lt;/h3&gt;

    &lt;p&gt;Sometimes it is best to relax a bit and just be creative. Maybe imagine
a weird video-game-universe where you would like to live in. And on closer
inspection of these thoughts, you may just be surprised what gems lie
uncovered hidden in your own imagination.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>neue Art Dimension zu zählen</title>
     <link href="http://localhost:4000/posts/neue_Art_Dimension_zu_z%C3%A4hlen"/>
     <updated>2020-05-22T14:16:00+00:00</updated>
     <id>http://localhost:4000/posts/neue_Art_Dimension_zu_zählen</id>
     <content type="html">&lt;h3 id=&quot;einleitung-in-die-theorie&quot;&gt;Einleitung in die Theorie&lt;/h3&gt;

&lt;p&gt;Vor einigen Tagen bin ich auf den Artikel &lt;a href=&quot;https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/&quot;&gt;Finally We May Have a Path to
the Fundamental Theory of Physics… and It’s
Beautiful&lt;/a&gt;
von &lt;a href=&quot;https://www.stephenwolfram.com/&quot;&gt;Stephen Wolfram&lt;/a&gt;, einem
amerikanischen Wissenschaftler und Erfinder von
&lt;a href=&quot;https://www.wolframalpha.com/&quot;&gt;WolframAlpha&lt;/a&gt; gestoßen.&lt;/p&gt;

&lt;p&gt;In seinem Artikel geht es um seine neue Theorie der Physik, welche auf
gerichteten Graphen und deren Veränderungen unter der Auswirkung von
Regeln aufbaut. Für genauere Infos ist hier die ganze Version:
&lt;a href=&quot;https://www.wolframphysics.org/technical-introduction/&quot;&gt;www.wolframphysics.org/technical-introduction/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unter anderem werden durch seine Theorie mathematische Räume aus Graphen
gebildet. Also Knoten welche untereinander vernetzt sind.&lt;/p&gt;

&lt;h3 id=&quot;auswirkung-auf-dimensionalität&quot;&gt;Auswirkung auf Dimensionalität&lt;/h3&gt;

&lt;p&gt;Nun bildet sich die Frage, was uns dies über die Dimensionalität von
Räumen sagen kann.&lt;/p&gt;

&lt;p&gt;Vieles zu diesem Thema kann man &lt;a href=&quot;https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#23_out&quot;&gt;in dem Artikel
durchlesen&lt;/a&gt;.
Doch kurz zusammengefasst, kann man mittels dieser Graphen die Dimension
eines Raumes generallisieren. Diese Generallisierung kann man dann
sogar auf andere mathematische Objekte ausdehnen, sodass man den
Dimensionsbegriff generell erweitern kann. Somit wird es uns möglich, auch
über “2.5”-Dimensionalen Raum zu reden, oder auch “\(\pi\)“-Dimensionale
Räume zu betrachten. Wichtig ist dabei, dass wir nicht nur auf klassische
Vektorräume bestehend aus Tupeln (z.B. \(\mathbb{R}^3\)) begrentz sind,
sondern jede Menge, welche mit einer Metrik versehen ist, als unser
Raum verwendet werden kann.&lt;/p&gt;

&lt;p&gt;Das interessante ist hier also, dass dieser neue Begriff der Dimension
alleine von einer Menge und einer darauf definierten Metrik abhängt,
doch ein rein topologischer Raum, scheint dafür nicht auszureichen.&lt;/p&gt;

&lt;h3 id=&quot;meine-ersten-ideen&quot;&gt;Meine ersten Ideen&lt;/h3&gt;

&lt;p&gt;Zuerst war es für mich recht kompliziert, diesen Begriff für metrische
Räume zu übersetzen. Doch im Endeffekt waren die Formeln eigentlich die
selben, nur habe ich es mir selber unnötig kompliziert gemacht, indem
ich selber noch herumgeforscht habe:&lt;/p&gt;

&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;a/3yjeSPI&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/a/3yjeSPI&quot;&gt;Meine Ideen zum Dimensionsbegriff&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;h3 id=&quot;wie-funktioniert-dieser-dimensionsbegriff&quot;&gt;Wie funktioniert dieser Dimensionsbegriff?&lt;/h3&gt;

  &lt;p&gt;Betrachte folgende Graphen:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;img src=&quot;https://writings.stephenwolfram.com/data/uploads/2020/04/0414img31.png&quot; alt=&quot;2D Sphäre im
Gitter&quot; title=&quot;fig:&quot; /&gt;&lt;/li&gt;
    &lt;li&gt;&lt;img src=&quot;https://writings.stephenwolfram.com/data/uploads/2020/04/0414img32.png&quot; alt=&quot;3D Sphäre im
Gitter&quot; title=&quot;fig:&quot; /&gt;&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Beide stellen da, wie sich Sphären in einem Gitter ausbreiten. Das wird,
so Herr Wolfram folgender Maßen gebildet: “Start at some point in the
hypergraph. Then follow \(r\) hyperedges in all possible ways. You’ve
effectively made the analog of a “spherical ball” in the
hypergraph.&quot;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

  &lt;p&gt;Nun kann man für beliebige Graphen einen Punkt wählen, und Zählen, wie
viele Punkte in \(r\) Schritten oder weniger erreichbar sind. Sollte
diese Ausbreitung der eines Polynoms ähnlich sein, so kann man anhand
des Grades dessen die Dimension bestimmen. Das genaue bestimmen ist
jedoch nicht trivial und wird im Kapitel 4.6 vom Wolfram Physics
Project&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; genauer erklärt&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&quot;fnref:4&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

  &lt;h3 id=&quot;berechnung-der-dimension&quot;&gt;Berechnung der Dimension&lt;/h3&gt;

  &lt;h5 id=&quot;hinweis&quot;&gt;Hinweis&lt;/h5&gt;

  &lt;p&gt;In dem Folgenden wird eine von mir entwickelte Version betrachtet,
welche an das
&lt;a href=&quot;https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/the-notion-of-dimension/&quot;&gt;Original&lt;/a&gt;
nur angelehnt ist.&lt;/p&gt;

  &lt;h5 id=&quot;berechnung&quot;&gt;Berechnung&lt;/h5&gt;

  &lt;p&gt;Sei \((M,d)\) ein metrischer Raum.&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;\(M\) ist Menge&lt;/li&gt;
    &lt;li&gt;\(d: M\times M \rightarrow \mathbb{R}_{\ge 0}\) ist eine Metrik&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Sei \(V_{r,x} = |\{y \in M \mid d(x,y) \le r\}|\) die Anzahl aller
Punkte eines Balles mit Radius \(r\).&lt;/p&gt;

  &lt;p&gt;Sei
\(\Delta_{r,x} = \frac{\log(V_{r+1,x})-\log(V_{r,x})}{\log(r+1)-\log(r)} = \frac{\log\frac{V_{r+1,x}}{V_{r,x}}}{\log{\frac{r+1}{r}}}\).&lt;/p&gt;

  &lt;p&gt;Nun gilt folgendes:&lt;/p&gt;

\[\text{dim}(M,d) = \begin{cases}
    \lim_{r\rightarrow \infty}\Delta_{r,x} &amp;amp; \text{wenn}\&amp;gt; |M|\ge\infty \wedge |V_{r,x}|&amp;lt;\infty\\
    \lim_{r\rightarrow \infty}\Delta_{r,x} &amp;amp; \text{(?) wenn}\&amp;gt; |M|\ge\infty \wedge |V_{r,x}|\ge\infty\\
    \begin{gather}
    v\in\mathbb{R}_{\ge 0} \text{ mit } \\
    |\{\Delta_{v\pm\epsilon,x}\}| = \max |\{\Delta_{w\pm\epsilon,x}\}|\\
    \forall \epsilon,w\in\mathbb{R}_{\ge 0}
    \end{gather} &amp;amp; \text{wenn}\&amp;gt; |M|&amp;lt;\infty
\end{cases}\]

  &lt;h5 id=&quot;beispiel-1&quot;&gt;Beispiel 1&lt;/h5&gt;

\[\begin{aligned}
    M      &amp;amp; = \mathbb{Z} \\
    d(x,y) &amp;amp; = |x+y| \\
    V_{r,x}&amp;amp; = 2r \\
    \Delta_{r,x} &amp;amp;= \frac{- \log{\left(2 r \right)} + \log{\left(2 r + 2 \right)}}{- \log{\left(r \right)} + \log{\left(r + 1 \right)}} \\
    \lim_{r\rightarrow\infty}\Delta_{r,x} &amp;amp;= 1
\end{aligned}\]

  &lt;p&gt;Hier stimmt die Dimension offensichtlich mit der herkömmlichen
Definition überein.&lt;/p&gt;

  &lt;h5 id=&quot;beispiel-2&quot;&gt;Beispiel 2&lt;/h5&gt;

\[\begin{aligned}
    M      &amp;amp; = \mathbb{Z}^2 \\
    d(x,y) &amp;amp; = |x_1+y_1 + x_2+y_2| \\
    V_{r,x}&amp;amp; = 2r^2+2r+1 \quad\forall x\in M\\
    \Delta_{r,x} &amp;amp;= \frac{\log{\left(2 r + 2 \left(r + 1\right)^{2} + 3 \right)} - \log{\left(2 r^{2} + 2 r + 1 \right)}}{- \log{\left(r \right)} + \log{\left(r + 1 \right)}} \\
    \lim_{r\rightarrow\infty}\Delta_{r,x} &amp;amp;= 2
\end{aligned}\]

  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Delta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;&lt;img src=&quot;../images/assets/unnamed-chunk-1-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;Auch hier stimmen die Definitionen überein.&lt;/p&gt;

  &lt;h5 id=&quot;beispiel-3&quot;&gt;Beispiel 3&lt;/h5&gt;

  &lt;p&gt;Ein Sierpiński Dreieck kann folgender Maßen gebildet werden:&lt;/p&gt;

  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sirp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[],[],[]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sirp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;points&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;# Winkel zwischen Punkten
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;# Anfangslänge eines Punktes zum nächsten
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decay&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# Koeffizient, mit dem bei jeder Iterationstiefe die Länge zwischen Punkten sinkt
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;newpoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Sierpiński Dreieck mit Rekursionstiefe rt
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sirp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Zeichnen
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Ein Sierpiński Dreieck mit Rekursionstiefe $'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Nun berechnen wir V_r für jeden Punkt für verschiedene r
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;&lt;img src=&quot;../images/assets/unnamed-chunk-2-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.025&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hypot&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;avg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;berechne die durchschnittliche Anzahl an Punkten in einer r großen Umgebung
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Radius $r$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Durchschnittliche Anzahl an Punkten in $V_r$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Delta berechnung
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;&lt;img src=&quot;../images/assets/unnamed-chunk-2-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Delta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Radius $r$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'$\Delta_r$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Durchschnittliches $\Delta_r$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'$Hausdorff Dimension von Sierpiński-Dreieck&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pprox\log_2(3)$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;&lt;img src=&quot;../images/assets/unnamed-chunk-2-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;Dies bewegt sich nahe der &lt;a href=&quot;https://de.wikipedia.org/wiki/Hausdorff-Dimension&quot;&gt;Hausdorff
Dimension&lt;/a&gt; von einem
Sierpiński-Dreieck und zeigt, dass diese Methode genereller ist, als
die Bestimmung der Dimension, wie sie in der linearen Algebra
beigebracht wird.&lt;/p&gt;

  &lt;p&gt;In den Folgenden Beiträgen, werde ich auf einige der Eigenschaften
dieses Dimensionsbegriffes eingehen. Darunter wird auch fallen, welche
Auswirkung die Dimension auf die Krümmung des Raumes hat und wie somit,
Beispielsweise Gravitation auf natürliche Weise auftaucht.&lt;/p&gt;

&lt;/blockquote&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#23_out&quot;&gt;https://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/#23_out&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.wolframphysics.org/&quot;&gt;https://www.wolframphysics.org/&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/the-notion-of-dimension/&quot;&gt;https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/the-notion-of-dimension/&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/dimension-related-characterizations/&quot;&gt;https://www.wolframphysics.org/technical-introduction/limiting-behavior-and-emergent-geometry/dimension-related-characterizations/&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>BildBesucher hat jetzt JSDoc-support</title>
     <link href="http://localhost:4000/posts/BildBesucher_hat_jetzt_JSDoc-support"/>
     <updated>2020-04-18T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/BildBesucher_hat_jetzt_JSDoc-support</id>
     <content type="html">&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;a/IX4jhgT&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/a/IX4jhgT&quot;&gt;Overview of my first jsdoc documentation (quoteme.github.io/bildbesucher/docs)&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;p&gt;Wie man es in dem obigen Bild sehen kann, habe ich heute
&lt;a href=&quot;https://jsdoc.app/index.html&quot;&gt;JSDoc&lt;/a&gt;-support zu meinem Spiel
&lt;a href=&quot;http://github.com/quoteme/bildbesucher&quot;&gt;BildBesucher&lt;/a&gt; hinzugefügt!
Das bedeuted, wenn man auf &lt;a href=&quot;https://quoteme.github.io/bildbesucher/docs/&quot;&gt;quoteme.github.io/bildbesucher/docs/&lt;/a&gt;
geht, kann man alle möglichen interessanten Infos über die Programmierung
des Spiels erfahren. Das erleichtert in der Zukunft mir beispielsweise
herauszufinden wofür eine bestimme Funktion gut war, oder Andere welche
meinem Projekt helfen möchten können somit schnell und einfach
herausfinden, was ich da überhaupt geschrieben habe.&lt;/p&gt;

  &lt;p&gt;Leider musste ich dafür die die Zeilenanzahl des Codes quasi verdoppeln,
doch sind all die Änderungen die ich gemacht habe nur Kommentare, somit
wird das Programm dadurch nicht langsamer!&lt;/p&gt;

  &lt;hr /&gt;

  &lt;p&gt;Das Ziel dieser ganzen Übung ist meinen Programmierstil zu verbessern
und meine Teamfähigkeit zu erhöhen, da ich somit gelernt habe, wie
ich meine Arbeiten am besten annotiere.&lt;/p&gt;

  &lt;p&gt;Dies könnte auch in ganz anderen Bereichen für mich nützlich sein, da
ich somit weiß, dass man immer gute Buchhaltung für seine Kollegen
halten sollte.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>BildBesucher</title>
     <link href="http://localhost:4000/posts/BildBesucher"/>
     <updated>2020-04-07T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/BildBesucher</id>
     <content type="html">&lt;p&gt;&lt;a href=&quot;https://quoteme.github.io/bildbesucher/&quot;&gt;Hier klicken um BildBesucher online auszuprobieren&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;a/eu6CCK4&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/a/eu6CCK4&quot;&gt;Bilder zu meinem Spiel: BildBesucher (https://quoteme.github.io/bildbesucher/)&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;hr /&gt;

  &lt;p&gt;Nach einiger Zeit bin habe ich mal wieder angefangen ein Spiel
zu schreiben, somit hat die momentane Corona-Kriese wenigstens ein paar
positive Eigenschaften.&lt;/p&gt;

  &lt;p&gt;Das Spiel nenne ich BildBesucher, da es eigentlich nur darum geht, dass
man Bilder online mit einem kleinen Character besuchen kann und von
einem Bild zum nächsten weitergeleitet werden kann. Die Idee für das
Spiel kam mir, als ich &lt;a href=&quot;https://xkcd.com/1608/&quot;&gt;XKCDs Hoverboard&lt;/a&gt;
gespielt habe und davon sehr begeistert war. Den Quellcode kann
man dafür auf der dazugehörigen &lt;a href=&quot;https://github.com/Quoteme/bildbesucher&quot;&gt;Github Seite&lt;/a&gt;
ansehen/forken.&lt;/p&gt;

  &lt;p&gt;Pläne sind momentan noch viele da, insbesondere soll die Zoom-Funktion
für die in-game Kamera möglichst schnell eingefügt werden, damit man
etwas mehr von der gezeichneten Welt herausfinden kann.
Andere wichtige Sachen, welche ich noch machen möchte sind:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Das Portalsystem, damit man an manchen stellen auf eine andere Seite
  geschickt wird&lt;/li&gt;
    &lt;li&gt;Das Ladesystem, damit man anhand der URL ein bestimmtes Level mit
  verschienen Eigenschaften (wie Position/etc) laden kann&lt;/li&gt;
    &lt;li&gt;Die Welt weiter ausbauen (mehr Bilder erstellen und mein momentanes
  erweitern)&lt;/li&gt;
    &lt;li&gt;???&lt;/li&gt;
  &lt;/ul&gt;

  &lt;hr /&gt;

  &lt;p&gt;PS: Ich hoffe, dass ich mein Spiel wenigstens dieses mal etwas weiter
zuende führe als sonst 😪&lt;/p&gt;
&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>My first program in the AUR</title>
     <link href="http://localhost:4000/posts/my_first_program_in_the_AUR"/>
     <updated>2020-03-28T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/my_first_program_in_the_AUR</id>
     <content type="html">&lt;p&gt;Recently I discovered some more of the incredibly useful features of
my favorite text-editor &lt;a href=&quot;https://github.com/neovim/neovim&quot;&gt;Neovim&lt;/a&gt;:&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Entering &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:read !somefunction&lt;/code&gt; in Neovim causes the editor to execute
the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;somefunction&lt;/code&gt; and then insert the echoed response into the
file you are currently editing at your cursor position.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This got me thinking… Maybe I could use this to make my programming
more concise. And after installing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;figlet&lt;/code&gt; I was proven right:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Use `:read figlet &quot;Example&quot;`&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#     and then select the output and comment it out: `:'&amp;lt;,'&amp;gt;norm ^i# `&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  _____                           _&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# | ____|_  ____ _ _ __ ___  _ __ | | ___&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# |  _| \ \/ / _` | '_ ` _ \| '_ \| |/ _ \&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# | |___ &amp;gt;  &amp;lt; (_| | | | | | | |_) | |  __/&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# |_____/_/\_\__,_|_| |_| |_| .__/|_|\___|&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#                           |_|&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;It works!&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;And after all this thinking I was stuck with an idea, which I had for
quite some time already, but never really knew how to implement in vim:&lt;/p&gt;

&lt;p&gt;I can use this, to show complex math formulas in programs, as actual math formulas&lt;/p&gt;

&lt;p&gt;The problem however was, that no package I searched for seemed to
provide the ability to render math formulas as ASCII / ANSI / Unicode.
And therefor I just set out to create my own program:&lt;/p&gt;

&lt;h3 id=&quot;prettymath&quot;&gt;&lt;a href=&quot;http://github.com/quoteme/prettymath&quot;&gt;prettymath&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The programming was the easy part. Just write a python script that
internally parses expressions using &lt;a href=&quot;https://www.sympy.org/en/index.html&quot;&gt;SymPy&lt;/a&gt;
and then pretty prints them. But publishing this program with none more
than ~50 lines of code was a real pain.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Publish to GitHub&lt;/li&gt;
  &lt;li&gt;Create an account on &lt;a href=&quot;https://aur.archlinux.org/&quot;&gt;https://aur.archlinux.org &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Use my &lt;a href=&quot;#ssh_config&quot;&gt;.ssh/config&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Generate an ssh key: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ ssh-keygen -f ~/.ssh/aur&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Clone your future repository: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone ssh://aur@aur.archlinux.org/your_package_name.git&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Put your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PKGBUILD&lt;/code&gt; in there&lt;/li&gt;
  &lt;li&gt;Add, Commit, Push&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;ssh_config&quot;&gt;SSH Configuration&lt;/h6&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; .ssh/config
Host aur.archlinux.org
User aur
PreferredAuthentications publickey
IdentityFile ~/.ssh/aur
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;And after all this struggle, which even drove me to reddit because I
had no clue anymore on what to do, I was able to install my package using the AUR:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yay &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; prettymath-git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;what-does-it-do&quot;&gt;What does it do?&lt;/h3&gt;

&lt;p&gt;After having installed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prettymath-git&lt;/code&gt;, you can do stuff like this:&lt;/p&gt;

&lt;p&gt;before &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prettymath&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;normalDistribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;after &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prettymath&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:read !prettymath -u &quot;1/sqrt(pi) * e**(-x**2)&quot;; :norm ^i# &lt;/code&gt;)&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;normalDistribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;#    2
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;#  -x
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;# e
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;# ────
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;#  √π
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>Custom login-prompt in linux</title>
     <link href="http://localhost:4000/posts/custom_loginprompt_linux"/>
     <updated>2020-03-02T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/custom_loginprompt_linux</id>
     <content type="html">&lt;p&gt;I was asked on &lt;a href=&quot;https://www.reddit.com/r/archlinux/comments/fc4vqs/removing_lightdm/&quot;&gt;reddit&lt;/a&gt; how to change this:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;how to change this&lt;/th&gt;
      &lt;th&gt;to this:&lt;/th&gt;
      &lt;th&gt;or this:&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://i.imgur.com/lmKNzQn.png&quot;&gt;&lt;img src=&quot;https://i.imgur.com/lmKNzQn.png&quot; alt=&quot;default login-prompt for Arch Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://i.imgur.com/3BCKr8A.png&quot;&gt;&lt;img src=&quot;https://i.imgur.com/3BCKr8A.png&quot; alt=&quot;login-prompt for Arch Linux with screenfetch&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://i.imgur.com/bXuArnx.png&quot;&gt;&lt;img src=&quot;https://i.imgur.com/bXuArnx.png&quot; alt=&quot;login-prompt for Arch Linux with screenfetch&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;default login screen&lt;/td&gt;
      &lt;td&gt;a loginscreen that runs neofetch every boot (has bugs tho)&lt;/td&gt;
      &lt;td&gt;a loginscreen that runs neofetch every shutdown (information is one shutdown old, but it works better)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h5 id=&quot;tldr&quot;&gt;TL;DR:&lt;/h5&gt;

&lt;p&gt;How do I display Screenfetch/Neofetch before login in a TTY?&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;instructions&quot;&gt;Instructions&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;install &lt;a href=&quot;https://github.com/dylanaraps/neofetch&quot;&gt;neofetch&lt;/a&gt; or &lt;a href=&quot;https://github.com/KittyKatt/screenFetch&quot;&gt;screenfetch&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo pacman -S neofetch&lt;/code&gt;) (I will use neofetch here, but it is the same process for screenfetch)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;download my &lt;a href=&quot;#update_login_prompt&quot;&gt;neofetch_login_prompt.service&lt;/a&gt; system.d service file&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;place this file in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;enable the script to run at boot: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo systemctl enable neofetch_login_prompt --now&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;reboot! it should work now&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;files&quot;&gt;Files&lt;/h3&gt;

&lt;h4 id=&quot;update_login_prompt&quot;&gt;neofetch_login_prompt&lt;/h4&gt;

&lt;h5 id=&quot;version-that-updates-on-shutdown&quot;&gt;Version that updates on shutdown&lt;/h5&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# /etc/systemd/system/neofetch_login_prompt.service&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Util]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Display Neofetch before login &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a TTY

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;oneshot
&lt;span class=&quot;nv&quot;&gt;RemainAfterExit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;yes
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ExecStop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/env bash &lt;span class=&quot;nt&quot;&gt;-ec&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'neofetch &amp;gt; /etc/issue'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;h5 id=&quot;version-that-updates-at-boot&quot;&gt;Version that updates at boot&lt;/h5&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# /etc/systemd/system/neofetch_login_prompt.service&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Util]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Display Neofetch before login &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a TTY

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/env bash &lt;span class=&quot;nt&quot;&gt;-ec&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'neofetch &amp;gt; /etc/issue'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

</content>
   </entry>
   
 
   
   <entry>
     <title>glider</title>
     <link href="http://localhost:4000/posts/glider"/>
     <updated>2020-02-27T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/glider</id>
     <content type="html">&lt;p&gt;Heute bin ich beim Durchsuchen meines alten Laptops auf ein Projekt
von vor fast genau einem Jahr und einem Monat gestoßen:&lt;/p&gt;

&lt;p class=&quot;center-image&quot;&gt;&lt;img src=&quot;/glider/screenshot.png&quot; alt=&quot;Screenshot of glider&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Das Projekt hieß &lt;a href=&quot;https://github.com/Quoteme/glider&quot;&gt;Glider&lt;/a&gt; und kann
in einem Browser ohne etwas installieren zu müssen auf
&lt;a href=&quot;http://localhost:4000/glider/&quot;&gt;http://localhost:4000/glider/&lt;/a&gt;
getestet/gespielt werden.&lt;/p&gt;

&lt;p&gt;Im Grunde ging es nur darum ein proof-of-concept dafür zu haben, dass ich
ein Spiel wie &lt;a href=&quot;https://store.steampowered.com/app/233150/LUFTRAUSERS/?snr=1_7_7_151_150_1&quot;&gt;LUFTRAUSERS&lt;/a&gt;
nachprogrammieren könnte. Mein “clon” ist zwar nur sehr eingeschränkt
in dem, was er tuen kann, aber dennoch hat er genau das erreicht was
ich erreichen wollte.&lt;/p&gt;

&lt;p&gt;Highlights beinhalten:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;retro Ästhetik&lt;/li&gt;
  &lt;li&gt;KI der Gegner&lt;/li&gt;
  &lt;li&gt;Variable Anzahlen von Teams&lt;/li&gt;
  &lt;li&gt;die Möglichkeit jeden anderen Glider zu steuern&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
 
   
 
   
   <entry>
     <title>i3bar</title>
     <link href="http://localhost:4000/posts/i3bar"/>
     <updated>2020-02-19T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/i3bar</id>
     <content type="html">&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;a/swgn01F&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/a/swgn01F&quot;&gt;&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;p&gt;Du findest mein Laptop sieht interessant aus?
Du würdest gerne die selbe Statusbar in &lt;a href=&quot;i3wm.org&quot;&gt;i3&lt;/a&gt;
haben wie ich?
Dann ist hier die Anleitung für dich!&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;
      &lt;p&gt;(trivial) installiere &lt;a href=&quot;i3wm.org&quot;&gt;i3&lt;/a&gt; &lt;!--und [i3bar](https://i3wm.org/docs/i3bar-protocol.html)--&gt;
 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ pacman -S i3-gaps&lt;/code&gt;)&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;falls du &lt;a href=&quot;https://github.com/i3/i3status&quot;&gt;i3status&lt;/a&gt; installiert hast: deinstalliere es
 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ pacman -Rns i3status&lt;/code&gt;)&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;installiere &lt;a href=&quot;https://github.com/davidscholberg/goblocks&quot;&gt;goblocks&lt;/a&gt;
 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# yay goblocks&lt;/code&gt;, falls &lt;a href=&quot;https://github.com/Jguer/yay&quot;&gt;yay&lt;/a&gt; bereits installiert ist)&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;Ändere &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i3status&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;goblocks&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.config/i3/config&lt;/code&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;Bearbeite &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.config/goblocks/goblocks.yml&lt;/code&gt;
      &lt;ul&gt;
        &lt;li&gt;schreibe eine config selber&lt;/li&gt;
        &lt;li&gt;oder kopiere &lt;a href=&quot;https://pastebin.com/VWpMasZx&quot;&gt;meine config&lt;/a&gt;
  diese hat &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playerctl&lt;/code&gt; mitinbehalten. Wenn du das nicht möchtest,
  lösche einfach den dazugehörende ‘command’-Abschnitt. Ansonsten
  siehe den nächsten Abschnitt an&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;(optional) installiere &lt;a href=&quot;https://github.com/altdesktop/playerctl&quot;&gt;playerctl&lt;/a&gt;
 um die momentan spielende Musik (auf youtube/spotify/…) anzuzeigen.
 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# pacman -S playerctl&lt;/code&gt;
 und verwende den folgenden code in deiner config&lt;/li&gt;
  &lt;/ol&gt;

  &lt;figure class=&quot;highlight&quot;&gt;
    &lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;blocks:
    - type: command
      label: &quot;msc &quot; # &quot;📻&quot;
      command: sh /home/DEINNUTZERNAME/.config/goblocks/musicdisplay.sh&lt;/code&gt;&lt;/pre&gt;
  &lt;/figure&gt;

  &lt;p&gt;und erstelle die Datei &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;musicdisplay.sh&lt;/code&gt;:&lt;/p&gt;

  &lt;figure class=&quot;highlight&quot;&gt;
    &lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;playerctl metadata &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' - '&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/figure&gt;

  &lt;hr /&gt;

  &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/qlEUHuk.png&quot; alt=&quot;meine Statusbar mit Icons statt Text&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;NOTIZ: Um die selben Icons zu haben muss man &lt;a href=&quot;https://github.com/stark/siji&quot;&gt;Siji&lt;/a&gt; installieren &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;# yay -S siji-git&lt;/code&gt; und in seiner &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.config/i3/config&lt;/code&gt; folgendes als font setzen: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;font pango: Gohu GohuFont, Siji 11px&lt;/code&gt;&lt;/p&gt;

&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>Jupyter Notebook auf Android</title>
     <link href="http://localhost:4000/posts/jupyter_pydroid"/>
     <updated>2020-02-18T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/jupyter_pydroid</id>
     <content type="html">&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;XKFMPSw&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/XKFMPSw&quot;&gt;Jupyter Notebook on Android&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;Installiere &lt;a href=&quot;https://play.google.com/store/apps/details?id=ru.iiec.pydroid3&amp;amp;hl=en_US&quot;&gt;Pydroid3&lt;/a&gt;
 und &lt;a href=&quot;https://play.google.com/store/apps/details?id=ru.iiec.pydroid3.quickinstallrepo&amp;amp;hl=en_US&quot;&gt;Pydroid Repository&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Öffne Pydroid 3 und wähle &lt;em&gt;Pip&lt;/em&gt; im Menü aus
      &lt;ol&gt;
        &lt;li&gt;Wähle &lt;em&gt;quick install&lt;/em&gt; und installiere &lt;em&gt;jupyter&lt;/em&gt;&lt;/li&gt;
        &lt;li&gt;(Optional installiere &lt;em&gt;sympy&lt;/em&gt;, &lt;em&gt;numpy&lt;/em&gt;, …)&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
    &lt;li&gt;Wähle &lt;em&gt;Terminal&lt;/em&gt; im Menü aus
      &lt;ol&gt;
        &lt;li&gt;Gib &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jupyter notebook --ip=127.0.0.1 --port=4040&lt;/code&gt; ein&lt;/li&gt;
        &lt;li&gt;Ein neues Browserfenster mit Jupyter Notebook öffnet sich&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
    &lt;li&gt;Beende das Terminal, nach benutzen von Jupyter&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>intersect.mjs und der Sphären/Boxen-Schnitt</title>
     <link href="http://localhost:4000/posts/intersect_sphere_box"/>
     <updated>2020-02-14T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/intersect_sphere_box</id>
     <content type="html">&lt;h3 id=&quot;problem&quot;&gt;Problem&lt;/h3&gt;

&lt;p&gt;Momentan arbeite ich an meiner &lt;a href=&quot;https://github.com/Quoteme/intersect&quot;&gt;intersect.mjs&lt;/a&gt;
Bibliothek, welche dafür da ist Kollisionen und Schnitte von verschiedenen
geometrischen Strukturen in \(n\) dimensionen zu erkennen.
Dabei ist gerade diese folgende Zeile zu einer Herausvorderung geworden:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// plane2circle :: Real a =&amp;gt; [(a,a)] -&amp;gt; a -&amp;gt; [a] -&amp;gt; ([a] -&amp;gt; Real) -&amp;gt; Boolean&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plane2circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hypot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//TODO&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Abkürzung&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Eigenschaft&lt;/th&gt;
      &lt;th&gt;Beschreibung&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Hyperwürfel&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[(a,a)]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Zwei Punkte im \(\mathbb{R}^n\)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Radius&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Radius der Sphäre&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Position der Sphäre&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Position des Zentrums der Sphäre&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Maß&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a] -&amp;gt; a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Ein verwendetes &lt;a href=&quot;https://de.wikipedia.org/wiki/Ma%C3%9F_(Mathematik)#Definition&quot;&gt;Maß&lt;/a&gt; aus der Maßtheorie&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;hierbei verwende ich &lt;a href=&quot;haskell.org&quot;&gt;Haskell&lt;/a&gt; Schreibkonventionen für die
Eigenschaften. Also, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; bedeuted, ein beliebiger Datentyp oder
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[a,a]&lt;/code&gt; deuted auf zwei beliebige Daten (die nicht gleich sein müssen,
des selben Types hin. Da ich &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Real a =&amp;gt;...&lt;/code&gt; am Anfang geschrieben habe,
bedeuted dass: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[(a,a)]&lt;/code&gt; ist eine Liste von Tupeln verschiedener reeller
Zahlen: \(((a_{0_0},a_{0_1}),(a_{1_0},a_{1_1}),\dots), \quad a_{i_j} \in \mathbb{R}\)&lt;/p&gt;

&lt;h3 id=&quot;lösung&quot;&gt;Lösung&lt;/h3&gt;

&lt;p&gt;Damit ich diese Funktion dazu bringen konnte, zu funktionieren ist mir
eine Lösung gekommen. Gegeben hatte ich bereits eine Funktion, welche
prüft ob eine Hypersphäre und ein Punkt sich schneiden. Daher habe ich
eine weitere Funktion geschrieben, welche prüft, ob sich ein Kreis und
ein Intervall schneiden:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;
  &lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// point2circle :: Num a =&amp;gt; [a] -&amp;gt; Real -&amp;gt; [a] -&amp;gt; ([a] -&amp;gt; Real) -&amp;gt; Boolean&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point2circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hypot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// interval2circle :: Num a =&amp;gt; a -&amp;gt; Real -&amp;gt; [a,a] -&amp;gt; Boolean&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval2circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hypot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;point2circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/figure&gt;

&lt;p&gt;Nun ist es ein Leiches, zu prüfen ob ein Hyperwürfel und eine Hypersphäre
sich schneiden;
Man muss prüfen ob die Projektionen der Sphäre und des Hyperwürfels sich
auf jeder Achse schneiden.&lt;/p&gt;

&lt;blockquote class=&quot;imgur-embed-pub&quot; lang=&quot;en&quot; data-id=&quot;a/rZpCzkF&quot; data-context=&quot;false&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;//imgur.com/a/rZpCzkF&quot;&gt;&lt;/a&gt;&amp;lt;/blockquote&amp;gt;&lt;script async=&quot;&quot; src=&quot;//s.imgur.com/min/embed.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

  &lt;figure class=&quot;highlight&quot;&gt;
    &lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// plane2circle :: Num a =&amp;gt; [(a,a)] -&amp;gt; Real -&amp;gt; [a] -&amp;gt; ([a] -&amp;gt; Real) -&amp;gt; Boolean&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plane2circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hypot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval2circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/figure&gt;

  &lt;p&gt;und diese Funktion können wir nun testen:&lt;/p&gt;

  &lt;figure class=&quot;highlight&quot;&gt;
    &lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./intersect.mjs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plane2circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true ✅&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plane2circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false ✅&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plane2circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false ✅&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/figure&gt;

  &lt;p&gt;besonders das letzte Ergebnis kann man leicht überprüfen:&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/aqI995m.png&quot; alt=&quot;geometrischer Beweis&quot; /&gt;&lt;/p&gt;

  &lt;h3 id=&quot;fazit&quot;&gt;Fazit&lt;/h3&gt;

  &lt;p&gt;Das Problem &lt;em&gt;Schnitte zwischen höherdimensinalen Sphären und Würfeln&lt;/em&gt;
zu lösen war nicht all zu einfach auf den ersten Blick; doch verwendet
man (wortwörtlich) verschiedene Perspektiven und ist bereit bereits
bekannte Resultate (wie &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;point2circle&lt;/code&gt;) zu verwenden und neue zu
finden (wie &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interval2circle&lt;/code&gt;), so ist es doch ein Leichtes gewesen
eine allgemeine Lösung zu finden.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>First Post</title>
     <link href="http://localhost:4000/posts/first_post"/>
     <updated>2020-02-09T00:00:00+00:00</updated>
     <id>http://localhost:4000/posts/first_post</id>
     <content type="html">&lt;p&gt;Ich habe nun endlich meine Seite geupdated, sodass ich ein etwas
moderneres Layout verwende und dazu noch die praktisch unbegrenzten
Möglichkeiten von &lt;a href=&quot;jekyll.io&quot;&gt;Jekyll&lt;/a&gt; verwenden kann.&lt;/p&gt;

&lt;p&gt;Eine glückliche Konsequenz dessen ist, dass ich nun auch ein Blogging-
System integriert habe und hoffentlich stets neue Beiträge teilen kann.
Wie ich diese Technologie mit meinen bisherigen Projekten in Einklang
bringen werde, dass weiß ich noch nicht ganz genau. Doch alle meine
alten Projekte sind noch über meine &lt;a href=&quot;./projekte.html&quot;&gt;Projekte-Übersicht&lt;/a&gt;
auffindbar.&lt;/p&gt;

&lt;p&gt;Und ‘last but not least’, jetzt kann ich endlich &lt;a href=&quot;mathjax.org&quot;&gt;MathJax&lt;/a&gt;
in meinen Dokumenten verwenden! Das erlaubt dann solche Sachen zu schreiben:
\[ \sum_{p=0}^n \Big( cos \Big( \frac{\frac{\pi}{2}}{n} k_p \Big) \Big) + i \sum_{p=0}^n \Big( sin \Big( \frac{\frac{\pi}{2}}{n} k_p \Big) \Big)\]
Dies ist eine Formel, welche ich entwickelt habe, die es erlaubt einen Punkt
\( k = (k_0,\dots,k_n) \in \mathbb{R}^n \) auf \(\mathbb{C}\) abzubilden.&lt;/p&gt;

&lt;p&gt;Rückwirkend ist diese Projektion unnötig kompliziert und nicht wirklich hilfreich,
doch ich war sehr stolz damals darauf und habe sogar Memes darüber gemacht:
&lt;img src=&quot;https://i.imgur.com/zza8x8O.png&quot; alt=&quot;Hier sollte ein Meme zu sehen sein&quot; /&gt;&lt;/p&gt;
</content>
   </entry>
   
 
   
 
 
</feed>
